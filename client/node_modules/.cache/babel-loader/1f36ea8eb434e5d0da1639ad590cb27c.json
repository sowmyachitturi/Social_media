{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from '../isHostComponent';\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\n\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}\n\nexport default appendOwnerState;","map":{"version":3,"sources":["/Users/harshini/Desktop/Social/client/node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js"],"names":["_extends","isHostComponent","appendOwnerState","elementType","otherProps","ownerState","undefined"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+D;AAC7D,MAAIF,WAAW,KAAKG,SAAhB,IAA6BL,eAAe,CAACE,WAAD,CAAhD,EAA+D;AAC7D,WAAOC,UAAP;AACD;;AACD,SAAOJ,QAAQ,CAAC,EAAD,EAAKI,UAAL,EAAiB;AAC9BC,IAAAA,UAAU,EAAEL,QAAQ,CAAC,EAAD,EAAKI,UAAU,CAACC,UAAhB,EAA4BA,UAA5B;AADU,GAAjB,CAAf;AAGD;;AACD,eAAeH,gBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from '../isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}\nexport default appendOwnerState;"]},"metadata":{},"sourceType":"module"}