{"ast":null,"code":"// src/usePrefetchInfiniteQuery.tsx\nimport { useQueryClient } from \"./QueryClientProvider.js\";\n\nfunction usePrefetchInfiniteQuery(options, queryClient) {\n  const client = useQueryClient(queryClient);\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options);\n  }\n}\n\nexport { usePrefetchInfiniteQuery };","map":{"version":3,"mappings":";AAAA,SAASA,cAAT,QAA+B,0BAA/B;;AAQO,SAASC,wBAAT,CAOLC,OAPK,EAcLC,WAdK,EAeL;AACA,QAAMC,SAASJ,eAAeG,WAAf,CAAf;;AAEA,MAAI,CAACC,OAAOC,aAAP,CAAqBH,QAAQI,QAA7B,CAAL,EAA6C;AAC3CF,WAAOG,qBAAP,CAA6BL,OAA7B;AACF;AACF","names":["useQueryClient","usePrefetchInfiniteQuery","options","queryClient","client","getQueryState","queryKey","prefetchInfiniteQuery"],"sources":["/Users/harshini/Desktop/Social/client/node_modules/@tanstack/react-query/src/usePrefetchInfiniteQuery.tsx"],"sourcesContent":["import { useQueryClient } from './QueryClientProvider'\nimport type {\n  DefaultError,\n  FetchInfiniteQueryOptions,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\n\nexport function usePrefetchInfiniteQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: FetchInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n) {\n  const client = useQueryClient(queryClient)\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}