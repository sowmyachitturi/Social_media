{"ast":null,"code":"// src/usePrefetchQuery.tsx\nimport { useQueryClient } from \"./QueryClientProvider.js\";\n\nfunction usePrefetchQuery(options, queryClient) {\n  const client = useQueryClient(queryClient);\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchQuery(options);\n  }\n}\n\nexport { usePrefetchQuery };","map":{"version":3,"mappings":";AAAA,SAASA,cAAT,QAA+B,0BAA/B;;AAQO,SAASC,gBAAT,CAMLC,OANK,EAOLC,WAPK,EAQL;AACA,QAAMC,SAASJ,eAAeG,WAAf,CAAf;;AAEA,MAAI,CAACC,OAAOC,aAAP,CAAqBH,QAAQI,QAA7B,CAAL,EAA6C;AAC3CF,WAAOG,aAAP,CAAqBL,OAArB;AACF;AACF","names":["useQueryClient","usePrefetchQuery","options","queryClient","client","getQueryState","queryKey","prefetchQuery"],"sources":["/Users/harshini/Desktop/Social/client/node_modules/@tanstack/react-query/src/usePrefetchQuery.tsx"],"sourcesContent":["import { useQueryClient } from './QueryClientProvider'\nimport type {\n  DefaultError,\n  FetchQueryOptions,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\n\nexport function usePrefetchQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n) {\n  const client = useQueryClient(queryClient)\n\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchQuery(options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}