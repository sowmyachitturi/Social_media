[{"/Users/harshini/Desktop/Social/client/src/index.js":"1","/Users/harshini/Desktop/Social/client/src/App.js":"2","/Users/harshini/Desktop/Social/client/src/context/authContext.js":"3","/Users/harshini/Desktop/Social/client/src/context/darkModeContext.js":"4","/Users/harshini/Desktop/Social/client/src/pages/home/Home.jsx":"5","/Users/harshini/Desktop/Social/client/src/pages/login/Login.jsx":"6","/Users/harshini/Desktop/Social/client/src/pages/register/Register.jsx":"7","/Users/harshini/Desktop/Social/client/src/pages/profile/Profile.jsx":"8","/Users/harshini/Desktop/Social/client/src/components/navbar/Navbar.jsx":"9","/Users/harshini/Desktop/Social/client/src/components/leftBar/LeftBar.jsx":"10","/Users/harshini/Desktop/Social/client/src/components/rightBar/RightBar.jsx":"11","/Users/harshini/Desktop/Social/client/src/components/share/Share.jsx":"12","/Users/harshini/Desktop/Social/client/src/components/stories/Stories.jsx":"13","/Users/harshini/Desktop/Social/client/src/components/posts/Posts.jsx":"14","/Users/harshini/Desktop/Social/client/src/components/post/Post.jsx":"15","/Users/harshini/Desktop/Social/client/src/components/comments/Comments.jsx":"16","/Users/harshini/Desktop/Social/client/src/components/update/Update.jsx":"17","/Users/harshini/Desktop/Social/client/src/axios.js":"18"},{"size":483,"mtime":1741167328950,"results":"19","hashOfConfig":"20"},{"size":1992,"mtime":1741166503504,"results":"21","hashOfConfig":"20"},{"size":715,"mtime":1741167236008,"results":"22","hashOfConfig":"20"},{"size":550,"mtime":1741166486992,"results":"23","hashOfConfig":"20"},{"size":318,"mtime":1741167262579,"results":"24","hashOfConfig":"20"},{"size":1772,"mtime":1741166189742,"results":"25","hashOfConfig":"20"},{"size":2042,"mtime":1741165875827,"results":"26","hashOfConfig":"20"},{"size":4338,"mtime":1741167298893,"results":"27","hashOfConfig":"20"},{"size":1840,"mtime":1741166848635,"results":"28","hashOfConfig":"20"},{"size":2920,"mtime":1741166819303,"results":"29","hashOfConfig":"20"},{"size":7097,"mtime":1741166959995,"results":"30","hashOfConfig":"20"},{"size":2770,"mtime":1741179942148,"results":"31","hashOfConfig":"20"},{"size":1060,"mtime":1741179967964,"results":"32","hashOfConfig":"20"},{"size":869,"mtime":1741179755658,"results":"33","hashOfConfig":"20"},{"size":3637,"mtime":1741166900133,"results":"34","hashOfConfig":"20"},{"size":1917,"mtime":1741179168491,"results":"35","hashOfConfig":"20"},{"size":4216,"mtime":1741179439981,"results":"36","hashOfConfig":"20"},{"size":140,"mtime":1741179564732,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n8zs9q",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/harshini/Desktop/Social/client/src/index.js",[],[],"/Users/harshini/Desktop/Social/client/src/App.js",[],[],[],"/Users/harshini/Desktop/Social/client/src/context/authContext.js",[],[],"/Users/harshini/Desktop/Social/client/src/context/darkModeContext.js",[],[],"/Users/harshini/Desktop/Social/client/src/pages/home/Home.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/pages/login/Login.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/pages/register/Register.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/pages/profile/Profile.jsx",["98"],[],"import \"./profile.scss\";\nimport FacebookTwoToneIcon from \"@mui/icons-material/FacebookTwoTone\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\nimport PinterestIcon from \"@mui/icons-material/Pinterest\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport PlaceIcon from \"@mui/icons-material/Place\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport Posts from \"../../components/posts/Posts\";\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport Update from \"../../components/update/Update\";\nimport { useState } from \"react\";\n\nconst Profile = () => {\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n\n  const userId = parseInt(useLocation().pathname.split(\"/\")[2]);\n\n  const { isLoading, error, data } = useQuery([\"user\"], () =>\n    makeRequest.get(\"/users/find/\" + userId).then((res) => {\n      return res.data;\n    })\n  );\n\n  const { isLoading: rIsLoading, data: relationshipData } = useQuery(\n    [\"relationship\"],\n    () =>\n      makeRequest.get(\"/relationships?followedUserId=\" + userId).then((res) => {\n        return res.data;\n      })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (following) => {\n      if (following)\n        return makeRequest.delete(\"/relationships?userId=\" + userId);\n      return makeRequest.post(\"/relationships\", { userId });\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"relationship\"]);\n      },\n    }\n  );\n\n  const handleFollow = () => {\n    mutation.mutate(relationshipData.includes(currentUser.id));\n  };\n\n  return (\n    <div className=\"profile\">\n      {isLoading ? (\n        \"loading\"\n      ) : (\n        <>\n          <div className=\"images\">\n            <img src={\"/upload/\"+data.coverPic} alt=\"\" className=\"cover\" />\n            <img src={\"/upload/\"+data.profilePic} alt=\"\" className=\"profilePic\" />\n          </div>\n          <div className=\"profileContainer\">\n            <div className=\"uInfo\">\n              <div className=\"left\">\n                <a href=\"http://facebook.com\">\n                  <FacebookTwoToneIcon fontSize=\"large\" />\n                </a>\n                <a href=\"http://facebook.com\">\n                  <InstagramIcon fontSize=\"large\" />\n                </a>\n                <a href=\"http://facebook.com\">\n                  <TwitterIcon fontSize=\"large\" />\n                </a>\n                <a href=\"http://facebook.com\">\n                  <LinkedInIcon fontSize=\"large\" />\n                </a>\n                <a href=\"http://facebook.com\">\n                  <PinterestIcon fontSize=\"large\" />\n                </a>\n              </div>\n              <div className=\"center\">\n                <span>{data.name}</span>\n                <div className=\"info\">\n                  <div className=\"item\">\n                    <PlaceIcon />\n                    <span>{data.city}</span>\n                  </div>\n                  <div className=\"item\">\n                    <LanguageIcon />\n                    <span>{data.website}</span>\n                  </div>\n                </div>\n                {rIsLoading ? (\n                  \"loading\"\n                ) : userId === currentUser.id ? (\n                  <button onClick={() => setOpenUpdate(true)}>update</button>\n                ) : (\n                  <button onClick={handleFollow}>\n                    {relationshipData.includes(currentUser.id)\n                      ? \"Following\"\n                      : \"Follow\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"right\">\n                <EmailOutlinedIcon />\n                <MoreVertIcon />\n              </div>\n            </div>\n            <Posts userId={userId} />\n          </div>\n        </>\n      )}\n      {openUpdate && <Update setOpenUpdate={setOpenUpdate} user={data} />}\n    </div>\n  );\n};\n\nexport default Profile;","/Users/harshini/Desktop/Social/client/src/components/navbar/Navbar.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/components/leftBar/LeftBar.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/components/rightBar/RightBar.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/components/share/Share.jsx",[],[],[],"/Users/harshini/Desktop/Social/client/src/components/stories/Stories.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/components/posts/Posts.jsx",["99"],[],"import Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nconst Posts = ({userId}) => {\n  const { isLoading, error, data } = useQuery({\n    queryKey: ['posts'],\n    queryFn: () => makeRequest.get(\"/posts\").then((res) => res.data)\n  });\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: (newPost) => makeRequest.post(\"/posts\", newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['posts'] })\n    },\n  });\n\n  return (\n    <div className=\"posts\">\n      {error\n        ? \"Something went wrong!\"\n        : isLoading\n        ? \"loading\"\n        : data.map((post) => <Post post={post} key={post.id} />)}\n    </div>\n  );\n};\n\nexport default Posts;","/Users/harshini/Desktop/Social/client/src/components/post/Post.jsx",["100"],[],"import \"./post.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst Post = ({ post }) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const { currentUser } = useContext(AuthContext);\n\n  const { isLoading, error, data } = useQuery([\"likes\", post.id], () =>\n    makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\n      return res.data;\n    })\n  );\n\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(\n    (liked) => {\n      if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\n      return makeRequest.post(\"/likes\", { postId: post.id });\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"likes\"]);\n      },\n    }\n  );\n  const deleteMutation = useMutation(\n    (postId) => {\n      return makeRequest.delete(\"/posts/\" + postId);\n    },\n    {\n      onSuccess: () => {\n        // Invalidate and refetch\n        queryClient.invalidateQueries([\"posts\"]);\n      },\n    }\n  );\n\n  const handleLike = () => {\n    mutation.mutate(data.includes(currentUser.id));\n  };\n\n  const handleDelete = () => {\n    deleteMutation.mutate(post.id);\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"container\">\n        <div className=\"user\">\n          <div className=\"userInfo\">\n            <img src={\"/upload/\"+post.profilePic} alt=\"\" />\n            <div className=\"details\">\n              <Link\n                to={`/profile/${post.userId}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <span className=\"name\">{post.name}</span>\n              </Link>\n              <span className=\"date\">{moment(post.createdAt).fromNow()}</span>\n            </div>\n          </div>\n          <MoreHorizIcon onClick={() => setMenuOpen(!menuOpen)} />\n          {menuOpen && post.userId === currentUser.id && (\n            <button onClick={handleDelete}>delete</button>\n          )}\n        </div>\n        <div className=\"content\">\n          <p>{post.desc}</p>\n          <img src={\"/upload/\" + post.img} alt=\"\" />\n        </div>\n        <div className=\"info\">\n          <div className=\"item\">\n            {isLoading ? (\n              \"loading\"\n            ) : data.includes(currentUser.id) ? (\n              <FavoriteOutlinedIcon\n                style={{ color: \"red\" }}\n                onClick={handleLike}\n              />\n            ) : (\n              <FavoriteBorderOutlinedIcon onClick={handleLike} />\n            )}\n            {data?.length} Likes\n          </div>\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}>\n            <TextsmsOutlinedIcon />\n            See Comments\n          </div>\n          <div className=\"item\">\n            <ShareOutlinedIcon />\n            Share\n          </div>\n        </div>\n        {commentOpen && <Comments postId={post.id} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;","/Users/harshini/Desktop/Social/client/src/components/comments/Comments.jsx",[],[],"/Users/harshini/Desktop/Social/client/src/components/update/Update.jsx",[],[],[],"/Users/harshini/Desktop/Social/client/src/axios.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":26,"column":22,"nodeType":"103","messageId":"104","endLine":26,"endColumn":27},{"ruleId":"101","severity":1,"message":"105","line":15,"column":9,"nodeType":"103","messageId":"104","endLine":15,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":22,"column":22,"nodeType":"103","messageId":"104","endLine":22,"endColumn":27},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'mutation' is assigned a value but never used."]